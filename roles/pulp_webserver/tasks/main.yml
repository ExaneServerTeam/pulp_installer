---
- name: Load OS specific variables
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml'
        - '{{ ansible_os_family }}.yml'
      paths:
        - 'vars'
  tags:
    - always

- debug:
    msg: >
      {{ (pulp_install_source == "packages") | ternary(pulp_python_interpreter, pulp_install_dir ~ "/bin/python") }}
    verbosity: 1

- name: "Check installed plugins for {{ pulp_webserver_server }} snippets"
  script:
    cmd: check_snippet.py {{ item.key | regex_replace("-", "_") | quote }} {{ pulp_webserver_server }}.conf
  args:
    executable: '{{ (pulp_install_source == "packages") | ternary(pulp_python_interpreter, pulp_install_dir ~ "/bin/python") }}'
  register: snippets
  with_dict: '{{ pulp_install_plugins_normalized }}'
  failed_when: >
    snippets.stderr is search("env: 'python': No such file or directory")
  changed_when: false
  check_mode: false

- include_tasks: "{{ pulp_webserver_server }}.yml"

- name: Set httpd_can_network_connect flag on and keep it persistent across reboots
  seboolean:
    name: httpd_can_network_connect
    state: true
    persistent: true
  become: true
  when:
    - ansible_os_family == 'RedHat'
    - ansible_selinux.status == 'enabled'
    - not (pulp_api_bind.startswith('unix:') and pulp_content_bind.startswith('unix:'))

- include_tasks: firewalld.yml
  when: pulp_configure_firewall in ['firewalld', 'auto']
